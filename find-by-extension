#!/usr/bin/env bash
#
#
# Determines the existence and echoes the names of files with the given file
# extension(s).
#
#
# Usage:
#    find-by-extension <extension> [<extension> ...]
#    find-by-extension -h
#
# Arguments:
#   <extension>           Extension to find by.
#
# Options:
#   -h                    Display help and exit.
#
#
# Exit codes:
#   0 - successfully found files
#   1 - incorrect usage
#   2 - failed to find files


# exit codes
SUCCESS=0
INCORRECT_USAGE=1
FAILURE=2


#######################################
# Display help message.
# Arguments:
#   None
# Outputs:
#   Writes help message to stdout
#######################################
showhelp() {
cat << EOF
Usage:
  find-by-extension <extension> [<extension> ...]
  find-by-extension -h

Determines the existence and echoes the names of files with the given file
extension(s).

Arguments:
  <extension>           Extension to find by.

Options:
  -h                    Display help and exit.
EOF
}


#######################################
# Asserts the given command runs successfully.
# Arguments:
#   $1 - message to print before running command
#   $2 - command to run
#   $3 - error message to print on failure
#   $4 - exit code to use on failure
#   $5 - success message to print on success
# Outputs:
#   Writes error message to stdout
#######################################
assert_success() {
    echo $1
    eval $2
    if [[ $? -ne 0 ]]; then
        echo "$3"
        echo -e "\nGoodbye..."
        exit $4
    fi
    echo -e $5
}


while getopts "h" flag; do
    case "${flag}" in
        h) showhelp; exit ${SUCCESS} ;;
        ?) showhelp; exit ${INCORRECT_USAGE} ;;
    esac
done

to_ignore=("node_modules" "venv" "build" "dist" ".github" ".vscode")
# Add any directories that you want to ignore to the above array.
# The script will ignore all files in these directories.

max=${#to_ignore[@]}
index=1
ignore="-name '${to_ignore[0]}' -prune"

while [[ ${index} -lt ${max} ]]; do
    ignore="${ignore} -o -name '${to_ignore[${index}]}' -prune"
    index=$((index + 1))
done

max=$#
index=2
extensions="--regexp='$1\$'"
shift 1

while [[ ${index} -le ${max} ]]; do
    extensions="${extensions} --regexp='$1\$'"
    index=$((index + 1))
    shift 1
done

eval "find . ${ignore} -o -print | grep ${extensions}"
