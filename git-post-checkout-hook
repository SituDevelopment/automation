#!/usr/bin/bash
#
# Runs commands which initialise the local development environment after checking out a
# Git repository.
#
# These commands help to ensure that the local development environment is consistent
# across all developers working on all projects.


echo "Marking repository as Git safe..."
sudo git config --system --add safe.directory `pwd` > /dev/null


find_by_extension "*.py" > /dev/null
if [ $? -eq 0 ]; then
    echo "Found Python!"

    if [ -f "config.example.py" -a ! -f "config.py" ]; then
        cp config.example.py config.py > /dev/null
        echo "Please edit \`config.py\` to ensure that it contains the required configuration variables."
    fi

    if [ ! -d "venv" ]; then
        echo "Creating virtual environment..."
        python3 -m venv venv > /dev/null
    fi

    source venv/bin/activate > /dev/null

    echo "Ensuring updated depencencies (including Black) are installed..."
    if [ -f "requirements.txt" ]; then
        pip install -r requirements.txt > /dev/null
    fi

    echo "Ensuring Pip requirements are up to date..."
    pip install black > /dev/null
    pip freeze > requirements.txt

    deactivate > /dev/null
fi


find_by_extension "*.html" "*.html/jinja" "*.css" "*.js" > /dev/null
if [ $? -eq 0 ]; then
    echo "Found web stuff!"

    if [ ! -f "package.json" ]; then
        echo "Initializing npm project..."
        npm init -y > /dev/null
        git add package.json package-lock.json > /dev/null
    fi

    echo "Ensuring updated depencencies (including Prettier) are installed..."
    npm install > /dev/null
    npm install prettier --save-dev > /dev/null

    echo "Ensuring Prettier configuration files are present..."
    if [ ! -f ".prettierrc.json" ]; then
        cp /usr/local/share/style/prettierrc.json .prettierrc.json > /dev/null
        git add .prettierrc.json > /dev/null
    fi
    if [ ! -f ".prettierignore" ]; then
        cp /usr/local/share/style/prettierignore .prettierignore > /dev/null
        git add .prettierignore > /dev/null
    fi
fi
